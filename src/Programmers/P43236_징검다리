import java.util.Arrays;
class Solution {
    public int solution(int distance, int[] rocks, int n) {
        //각 바위 사이의 최소값을 저장
        Arrays.sort(rocks);
        int[] disDiff = new int[rocks.length+1];
        disDiff[0] = rocks[0];
        disDiff[rocks.length] = distance - rocks[rocks.length-1];
        for(int i=1;i<rocks.length;i++) disDiff[i]=rocks[i]-rocks[i-1];
        //mid를 거리가 최소인 것들 중 최대값이라 생각하고 푼다
        int left = 1, right=distance;
        while(left<=right){
            int mid = (left+right)/2;
            int subSum = 0;
            int cnt = 0;
            for(int i=0;i<disDiff.length;i++){
                subSum+=disDiff[i];
                if(subSum<mid) cnt++;
                else subSum = 0;                
            }
            if(cnt>n) right = mid-1;
            else left = mid+1;
        }
        return (right+left)/2;
    }
}
